service: ${opt:appName, 'id'}

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'local'}
  stackName: ${self:custom.prefix}-infrastructure

custom:
  prefix: ${self:service}-${self:provider.stage}
  domainName: ${opt:domain-name}
  subDomain: ${opt:prefix, 'id'}.${self:custom.domainName}

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.subDomain}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
              AllowedOrigins:
                - '*'
              MaxAge: 3000

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
              Resource:
                - !Join
                  - ''
                  - - !GetAtt Bucket.Arn
                    - '/*'

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Ref Bucket

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.subDomain}
          ViewerCertificate:
            AcmCertificateArn: !ImportValue Certificate
            SslSupportMethod: sni-only
          CustomErrorResponses:
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultRootObject: /index.html
          Enabled: true
          HttpVersion: http2
          Origins:
            - DomainName: !GetAtt Bucket.DomainName
              Id: ${self:custom.prefix}-app
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - ''
                    - - origin-access-identity/cloudfront/
                      - Ref: CloudFrontOriginAccessIdentity
          PriceClass: PriceClass_100
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
            TargetOriginId: ${self:custom.prefix}-app
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https

    DnsRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: !ImportValue HostedZoneId
        Name: ${self:custom.subDomain}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt CloudFrontDistribution.DomainName
