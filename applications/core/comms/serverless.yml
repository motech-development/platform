service: platform-comms

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  runtime: nodejs16.x
  stage: ${opt:stage, 'local'}
  stackName: ${self:custom.prefix}-comms
  deploymentBucket:
    name: ${self:service}-deployment-bucket

package:
  individually: true

plugins:
  - serverless-deployment-bucket
  - serverless-webpack
  - serverless-prune-plugin

custom:
  prefix: platform-${self:provider.stage}
  domainName: ${env:PROD_DOMAIN}

  prune:
    automatic: true
    includeLayers: true
    number: 1

  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
      nodeModulesRelativeDir: ../../../
    packager: yarn
    packagerOptions:
      noFrozenLockfile: true

functions:
  VerifyDomain:
    handler: src/verify-domain.handler
    role: LambdaFunctionRole

resources:
  Resources:
    VerifyDomain:
      Type: Custom::VerifyDomain
      Properties:
        ServiceToken: !GetAtt VerifyDomainLambdaFunction.Arn
        DMARC: 'v=DMARC1; p=reject; pct=100; sp=reject; aspf=s;'
        Domain: ${self:custom.domainName}
        Region: eu-west-1
        SPF: 'v=spf1 include:spf.protection.outlook.com include:amazonses.com ~all'
        TTL: 3600

    EmailVerificationRecords:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneId: !ImportValue HostedZoneId
        RecordSets: !GetAtt VerifyDomain.Route53RecordSets

    LambdaFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: ${self:custom.prefix}-comms-lambda-function-role-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ses:DeleteIdentity
                    - ses:VerifyDomainIdentity
                    - ses:VerifyDomainDkim
                  Resource:
                    - '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogStreams
                  Resource:
                    - 'arn:aws:logs:*:*:*'
