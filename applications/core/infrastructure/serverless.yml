service: ${opt:appName, 'platform'}

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  runtime: nodejs14.x
  stage: ${opt:stage, 'local'}
  stackName: ${self:custom.prefix}-infrastructure

custom:
  prefix: ${self:service}-${self:provider.stage}
  domainName: ${env:PROD_DOMAIN}

resources:
  Resources:
    HostedZone:
      Type: AWS::Route53::HostedZone
      Properties:
        Name: ${self:custom.domainName}

    MxRecords:
      Type: AWS::Route53::RecordSet
      Properties:
        Name: ${self:custom.domainName}.
        HostedZoneId: !Ref HostedZone
        Type: MX
        TTL: '3600'
        ResourceRecords:
          - 0 motechdevelopment-co-uk.mail.protection.outlook.com.

    CNameRecords:
      Type: AWS::Route53::RecordSet
      Properties:
        Name: !Sub 'autodiscover.${self:custom.domainName}.'
        HostedZoneId: !Ref HostedZone
        Type: CNAME
        TTL: '3600'
        ResourceRecords:
          - autodiscover.outlook.com.

    Certificate:
      Type: AWS::CertificateManager::Certificate
      Properties:
        DomainName: !Sub '*.${self:custom.domainName}'
        SubjectAlternativeNames:
          - ${self:custom.domainName}
          - !Sub '*.${self:custom.domainName}'
        ValidationMethod: DNS

  Outputs:
    Certificate:
      Description: Domain certificate ARN
      Value: !Ref Certificate
      Export:
        Name: Certificate

    HostedZoneId:
      Description: Domain hosted zone ID
      Value: !Ref HostedZone
      Export:
        Name: HostedZoneId
