name: Production scheduled tests

on:
  schedule:
    - cron: '30 */12 * * *'

concurrency: production_environment

jobs:
  setup:
    name: Setup

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set Node version
        uses: actions/setup-node@v4.2.0
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Restore Node modules
        id: node-modules
        uses: actions/cache@v4.2.2
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore cache
        id: cache
        uses: actions/cache@v4.2.2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-cache-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Install dependencies
        if: steps.node-modules.outputs.cache-hit != 'true' || steps.cache.outputs.cache-hit != 'true'
        run: yarn

  warm-up:
    name: Warm up

    runs-on: ubuntu-latest

    needs:
      - setup

    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN_ACCOUNTS_BACKEND }}
      STAGE: production
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set Node version
        uses: actions/setup-node@v4.2.0
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v4.2.2
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v4.2.2
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v4-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v4.2.2
        with:
          path: |
            ./applications/accounts/warm-up/node_modules/.cache
            ./applications/accounts/warm-up/.serverless
          key: ${{ runner.os }}-accounts-warm-up-v4-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-warm-up-v4-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::633331859210:role/github-actions

      - name: Warm up
        run: yarn workspace @accounts/warm-up start --stage $STAGE

  accounts-tests:
    name: Accounts tests

    runs-on: ubuntu-latest

    needs: warm-up

    strategy:
      fail-fast: false
      matrix:
        containers:
          - 1
          - 2

    env:
      BASE_URL: https://accounts.motechdevelopment.co.uk
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set Node version
        uses: actions/setup-node@v4.2.0
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Restore Node modules
        uses: actions/cache@v4.2.2
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore cache
        id: cache
        uses: actions/cache@v4.2.2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-cache-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Install Playwright browsers
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn workspace @accounts/client playwright install --with-deps

      - name: Smoke tests
        run: yarn workspace @accounts/client e2e-ci --shard=${{ matrix.containers }}/2

  playwright-status:
    name: Set Playwright status

    runs-on: ubuntu-latest

    needs: accounts-tests

    if: always()

    steps:
      - name: Generate release token
        id: generate_token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: Set commit status
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const status = '${{ needs.accounts-tests.result }}' === 'success' ? 'success' : 'failure';
            const description = '${{ needs.accounts-tests.result }}' === 'success' ? 'Playwright tests passed' : 'Playwright tests failed';

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status,
              context: 'Playwright',
              description: description
            });
