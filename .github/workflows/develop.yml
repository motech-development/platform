# TODO: Cache Cypress?
name: Develop
on:
  - push

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node version
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Generate cache key
        run: ./scripts/checksum.sh ./checksum.txt

      - name: Restore Node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run package

      - name: Lint code
        run: npm run lint

      - name: Upload checksum
        uses: actions/upload-artifact@v2
        with:
          name: Checksum
          path: ./checksum.txt

      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: Packages
          path: ./packages/*/lib/*

  # unit-test:
  #   runs-on: ubuntu-latest

  #   needs: setup

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Unit test
  #       run: npm run test:ci

  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # deploy-auth0-tenant:
  #   runs-on: ubuntu-latest

  #   needs: unit-test

  #   env:
  #     AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID_DEV }}
  #     AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET_DEV }}
  #     AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_DEV }}
  #     AUTH0_SES_ACCESS_KEY_ID: ${{ secrets.AUTH0_SES_ACCESS_KEY_ID }}
  #     AUTH0_SES_ACCESS_SECRET_KEY: ${{ secrets.AUTH0_SES_ACCESS_SECRET_KEY }}
  #     AUTH0_SES_REGION: ${{ secrets.AUTH0_SES_REGION }}
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     PREFIX: id-develop
  #     PROD_DOMAIN: ${{ secrets.PROD_DOMAIN }}
  #     PUBLIC_URL: https://id-develop.${{ secrets.PROD_DOMAIN }}
  #     REACT_APP_GA: ${{ secrets.GA_ID_DEV }}
  #     STAGE: develop

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Deploy ID infrastructure
  #       run: npm run deploy -- --scope=@id/infrastructure -- -- --stage $STAGE --domain-name $PROD_DOMAIN --prefix $PREFIX

  #     - name: Build ID client
  #       run: npm run build -- --scope=@id/client

  #     - name: Build ID emails
  #       run: npm run build -- --scope=@id/emails

  #     - name: Deploy client
  #       run: npm run deploy -- --scope=@id/client -- -- --stage $STAGE --domain-name $PROD_DOMAIN --prefix $PREFIX

  #     - name: Deploy to Auth0
  #       run: npm run deploy -- --scope=@id/tenant -- -- -c config.json

  # deploy-open-banking:
  #   runs-on: ubuntu-latest

  #   needs: unit-test

  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     STAGE: develop
  #     YAPILY_APPLICATION_KEY: ${{ secrets.YAPILY_APPLICATION_KEY }}
  #     YAPILY_APPLICATION_SECRET: ${{ secrets.YAPILY_APPLICATION_SECRET }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Deploy
  #       run: npm run deploy -- --scope=@open-banking/api -- -- --stage $STAGE --appId $YAPILY_APPLICATION_KEY --appSecret $YAPILY_APPLICATION_SECRET

  # deploy-anti-virus:
  #   runs-on: ubuntu-latest

  #   needs: unit-test

  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     STAGE: develop

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Deploy
  #       run: npm run deploy -- --scope=@core/anti-virus -- -- --stage $STAGE

  # deploy-accounts-storage:
  #   runs-on: ubuntu-latest

  #   needs: deploy-anti-virus

  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     STAGE: develop

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Deploy
  #       run: npm run deploy -- --scope=@accounts/storage -- -- --stage $STAGE

  # deploy-accounts-queue:
  #   runs-on: ubuntu-latest

  #   needs: deploy-open-banking

  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     STAGE: develop

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Deploy
  #       run: npm run deploy -- --scope=@accounts/queue -- -- --stage $STAGE

  # deploy-accounts-data:
  #   runs-on: ubuntu-latest

  #   needs: deploy-accounts-storage

  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     STAGE: develop

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set Node version
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12.x'

  #     - name: Restore checksum
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Checksum

  #     - name: Restore packages
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: Packages
  #         path: ./packages

  # - name: Restore Node modules
  #   uses: actions/cache@v2
  #   with:
  #     path: |
  #       ~/.npm
  #       ./node_modules
  #       ./applications/*/*/node_modules
  #       ./packages/*/node_modules
  #     key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
  #     restore-keys: |
  #       ${{ runner.os }}-node-

  #     - name: Deploy
  #       run: npm run deploy -- --scope=@accounts/data -- -- --stage $STAGE

  deploy-accounts-api:
    runs-on: ubuntu-latest

    needs: setup

    # needs:
    #   - deploy-accounts-data
    #   - deploy-accounts-queue
    #   - deploy-accounts-storage
    #   - deploy-open-banking

    env:
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_DEV }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node version
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Restore checksum
        uses: actions/download-artifact@v2
        with:
          name: Checksum

      - name: Restore packages
        uses: actions/download-artifact@v2
        with:
          name: Packages
          path: ./packages

      - name: Restore Node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Deploy
        run: npm run deploy -- --scope=@accounts/api -- -- --stage $STAGE --issuer $AUTH0_DOMAIN

      - name: Upload env vars
        uses: actions/upload-artifact@v2
        with:
          name: Env vars
          path: ./applications/accounts/client/.env.production

  build-accounts-client:
    runs-on: ubuntu-latest

    needs: deploy-accounts-api

    env:
      CYPRESS_AUDIENCE: ${{ secrets.CYPRESS_AUDIENCE }}
      CYPRESS_AUTH_URL: ${{ secrets.CYPRESS_AUTH_URL }}
      CYPRESS_CLIENT_ID: ${{ secrets.CYPRESS_CLIENT_ID }}
      CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
      CYPRESS_USERNAME: ${{ secrets.CYPRESS_USERNAME }}
      REACT_APP_AUTH0_AUDIENCE:
      REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.ACCOUNTS_APP_CLIENT_ID_DEV }}
      REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_DEV }}
      REACT_APP_GA: ${{ secrets.GA_ACCOUNTS_DEV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node version
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Restore checksum
        uses: actions/download-artifact@v2
        with:
          name: Checksum

      - name: Restore packages
        uses: actions/download-artifact@v2
        with:
          name: Packages
          path: ./packages

      - name: Restore Node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore env vars
        uses: actions/download-artifact@v2
        with:
          name: Env vars
          path: ./applications/accounts/client/

      - name: Build client
        run: npm run build -- --scope=@accounts/client

      - name: Smoke tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run e2e:ci -- --scope=@accounts/client
          install: false
          start: npx serve -s ./applications/accounts/client/build --listen 3000
          wait-on: http://localhost:3000

      - name: Screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: applications/accounts/client/cypress/screenshots

      - name: Video
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: applications/accounts/client/cypress/videos
