name: Deploy to develop

on:
  push:
    branches:
      - master

jobs:
  setup:
    name: Setup

    if: github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        id: node-modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        id: packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cache-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Install dependencies
        if: steps.node-modules.outputs.cache-hit != 'true' || steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build packages
        if: steps.packages.outputs.cache-hit != 'true' || steps.node-modules.outputs.cache-hit != 'true'
        run: yarn package

      - name: Lint code
        run: yarn lint

  # Auth0 tenant
  auth0-tenant:
    name: Deploy Auth0 tenant

    runs-on: ubuntu-latest

    needs: setup

    env:
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID_DEV }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET_DEV }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_DEV }}
      AUTH0_SES_ACCESS_KEY_ID: ${{ secrets.AUTH0_SES_ACCESS_KEY_ID }}
      AUTH0_SES_ACCESS_SECRET_KEY: ${{ secrets.AUTH0_SES_ACCESS_SECRET_KEY }}
      AUTH0_SES_REGION: ${{ secrets.AUTH0_SES_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PREFIX: id-develop
      PROD_DOMAIN: ${{ secrets.PROD_DOMAIN }}
      PUBLIC_URL: https://id-develop.${{ secrets.PROD_DOMAIN }}
      REACT_APP_GA: ${{ secrets.GA_ID_DEV }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/id/client/node_modules/.cache
            ./applications/id/client/.serverless
            ./applications/id/infrastructure/.serverless
          key: ${{ runner.os }}-id-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-id-v2-

      - name: Deploy ID infrastructure
        run: yarn deploy -- --scope=@id/infrastructure -- -- --stage $STAGE

      - name: Build ID client
        run: yarn build -- --scope=@id/client

      - name: Build ID emails
        run: yarn build --scope=@id/emails

      - name: Deploy client
        run: yarn deploy -- --scope=@id/client -- -- --stage $STAGE

      - name: Deploy to Auth0
        run: yarn deploy -- --scope=@id/tenant -- -- -c config.json

  # Open banking
  open-banking:
    name: Deploy Open Banking API

    runs-on: ubuntu-latest

    needs: setup

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop
      YAPILY_APPLICATION_KEY: ${{ secrets.YAPILY_APPLICATION_KEY }}
      YAPILY_APPLICATION_SECRET: ${{ secrets.YAPILY_APPLICATION_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/open-banking/api/node_modules/.cache
            ./applications/open-banking/api/.serverless
          key: ${{ runner.os }}-open-banking-api-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-open-banking-api-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@open-banking/api -- -- --stage $STAGE

  # Anti virus
  anti-virus:
    name: Deploy anti virus

    runs-on: ubuntu-latest

    needs: setup

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/core/anti-virus/node_modules/.cache
            ./applications/core/anti-virus/.serverless
          key: ${{ runner.os }}-core-anti-virus-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-core-anti-virus-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@core/anti-virus -- -- --stage $STAGE

      - name: Update definitions
        run: yarn execute update:definitions -- --scope=@core/anti-virus -- -- --stage $STAGE

  # Cypress (storage)
  cypress-storage:
    name: Deploy Cypress storage

    runs-on: ubuntu-latest

    needs: setup

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/cypress/storage/node_modules/.cache
            ./applications/cypress/storage/.serverless
          key: ${{ runner.os }}-cypress-storage-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cypress-storage-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@cypress/storage -- -- --stage $STAGE

  # Cypress (API)
  cypress-api:
    name: Deploy Cypress API

    runs-on: ubuntu-latest

    needs:
      - setup
      - cypress-storage

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CY_API_KEY: ${{ secrets.CY_API_KEY }}
      CY_API_GITHUB_PRIVATE_KEY: ${{ secrets.CY_API_GITHUB_PRIVATE_KEY }}
      CY_API_GITHUB_APP_ID: ${{ secrets.CY_API_GITHUB_APP_ID }}
      CY_API_GITHUB_CLIENT_ID: ${{ secrets.CY_API_GITHUB_CLIENT_ID }}
      CY_API_GITHUB_INSTALLATION_ID: ${{ secrets.CY_API_GITHUB_INSTALLATION_ID }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/cypress/api/node_modules/.cache
            ./applications/cypress/api/.serverless
          key: ${{ runner.os }}-cypress-api-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cypress-api-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@cypress/api -- -- --stage $STAGE

  # Accounts (queue)
  accounts-queue:
    name: Deploy accounts queue

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-data
      - open-banking

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/accounts/queue/node_modules/.cache
            ./applications/accounts/queue/.serverless
          key: ${{ runner.os }}-accounts-queue-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-queue-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/queue -- -- --stage $STAGE

  # Accounts (storage)
  accounts-storage:
    name: Deploy accounts storage

    runs-on: ubuntu-latest

    needs:
      - setup
      - anti-virus

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/accounts/storage/node_modules/.cache
            ./applications/accounts/storage/.serverless
          key: ${{ runner.os }}-accounts-storage-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-storage-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/storage -- -- --stage $STAGE

  # Accounts (data)
  accounts-data:
    name: Deploy accounts data

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-storage

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/accounts/data/node_modules/.cache
            ./applications/accounts/data/.serverless
          key: ${{ runner.os }}-accounts-data-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-data-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/data -- -- --stage $STAGE

  # Accounts (notifications)
  accounts-notifications:
    name: Deploy accounts notifications

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-data

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/accounts/notifications/node_modules/.cache
            ./applications/accounts/notifications/.serverless
          key: ${{ runner.os }}-accounts-notifications-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-notifications-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/notifications -- -- --stage $STAGE

  # Accounts (reports)
  accounts-reports:
    name: Deploy accounts reports

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-data
      - accounts-notifications
      - accounts-storage

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/accounts/reports/node_modules/.cache
            ./applications/accounts/reports/.serverless
          key: ${{ runner.os }}-accounts-reports-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-reports-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/reports -- -- --stage $STAGE

  # Accounts (API)
  accounts-api:
    name: Deploy accounts API

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-data
      - accounts-queue
      - accounts-reports
      - accounts-storage
      - auth0-tenant
      - open-banking

    env:
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_DEV }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STAGE: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore env vars
        uses: actions/cache@v2.1.6
        with:
          path: ./applications/accounts/client/.env.production
          key: ${{ runner.os }}-accounts-client-env-vars-checks-v2-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-accounts-client-env-vars-checks-

      - name: Restore application cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./applications/accounts/api/node_modules/.cache
            ./applications/accounts/api/.serverless
          key: ${{ runner.os }}-accounts-api-v2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-accounts-api-v2-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/api -- -- --stage $STAGE
