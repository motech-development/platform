name: Deploy to environment

on:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  setup:
    name: Setup

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Restore Node modules
        id: node-modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        id: packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Restore cache
        id: cache
        uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cache-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-

      - name: Install dependencies
        if: steps.node-modules.outputs.cache-hit != 'true' || steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build packages
        if: steps.packages.outputs.cache-hit != 'true' || steps.node-modules.outputs.cache-hit != 'true'
        run: yarn package

      # TODO: Re-enable
      # - name: Lint code
      #   run: yarn lint

  # TODO: Re-enable unit tests
  # unit-tests:
  #   name: Unit tests

  #   runs-on: ubuntu-latest

  #   needs: setup

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         fetch-depth: 0

  #     - name: Set Node version
  #       uses: actions/setup-node@v2.1.5
  #       with:
  #         node-version: 12

  #     - name: Generate packages cache key
  #       run: ./scripts/checksum.sh ./packages.txt packages

  #     - name: Restore Node modules
  #       uses: actions/cache@v2.1.5
  #       with:
  #         path: |
  #           ./node_modules
  #           ./applications/*/*/node_modules
  #           ./packages/*/node_modules
  #         key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-modules-

  #     - name: Restore packages
  #       uses: actions/cache@v2.1.5
  #       with:
  #         path: ./packages/*/lib
  #         key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-packages-

  #     - name: Unit test
  #       run: yarn test:ci

  #     - name: Fix paths for SonarCloud Scan
  #       run: ./scripts/sonar-scanner-path-fix.sh

  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Auth0 tenant

  # Open banking
  open-banking:
    name: Deploy Open Banking API

    runs-on: ubuntu-latest

    # TODO: unit-tests
    needs: setup

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}
      YAPILY_APPLICATION_KEY: ${{ secrets.YAPILY_APPLICATION_KEY }}
      YAPILY_APPLICATION_SECRET: ${{ secrets.YAPILY_APPLICATION_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@open-banking/api -- -- --stage $STAGE

  # Anti virus
  anti-virus:
    name: Deploy anti virus

    runs-on: ubuntu-latest

    # TODO: unit-tests
    needs: setup

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@core/anti-virus -- -- --stage $STAGE

  # Accounts (queue)
  accounts-queue:
    name: Deploy accounts queue

    runs-on: ubuntu-latest

    needs:
      # TODO: unit-tests
      - setup
      - accounts-data
      - open-banking

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/queue -- -- --stage $STAGE

  # Accounts (storage)
  accounts-storage:
    name: Deploy accounts storage

    runs-on: ubuntu-latest

    needs:
      # TODO: unit-tests
      - setup
      - anti-virus

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/storage -- -- --stage $STAGE

  # Accounts (data)
  accounts-data:
    name: Deploy accounts data

    runs-on: ubuntu-latest

    needs:
      # TODO: unit-tests
      - setup
      - accounts-storage

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/data -- -- --stage $STAGE

  # Accounts (notifications)
  accounts-notifications:
    name: Deploy accounts notifications

    runs-on: ubuntu-latest

    needs:
      # TODO: unit-tests
      - setup
      - accounts-data

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/notifications -- -- --stage $STAGE

  # Accounts (reports)
  accounts-reports:
    name: Deploy accounts reports

    runs-on: ubuntu-latest

    needs:
      # TODO: unit-tests
      - setup
      - accounts-data
      - accounts-notifications
      - accounts-storage

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node version
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.5
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.5
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v1-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Deploy
        run: yarn deploy -- --scope=@accounts/reports -- -- --stage $STAGE

  # Accounts (API)

  # Accounts (client)
