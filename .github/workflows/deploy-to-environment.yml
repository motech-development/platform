name: Deploy to environment

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  setup:
    name: Setup

    if: github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        id: node-modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        id: packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Install dependencies
        if: steps.node-modules.outputs.cache-hit != 'true' || steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build packages
        if: steps.packages.outputs.cache-hit != 'true' || steps.node-modules.outputs.cache-hit != 'true'
        run: yarn package

  # Open banking
  open-banking:
    name: Teardown Open Banking API

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-api
      - accounts-queue

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: 254
      YAPILY_APPLICATION_KEY: ${{ secrets.YAPILY_APPLICATION_KEY }}
      YAPILY_APPLICATION_SECRET: ${{ secrets.YAPILY_APPLICATION_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Teardown
        run: yarn teardown -- --scope=@open-banking/api -- -- --stage $STAGE

  # Anti virus
  anti-virus:
    name: Teardown anti virus

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-storage

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: eu-west-1
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DEFINITIONS_BUCKET: s3://anti-virus-254-definitions
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Clear bucket
        run: aws s3 rm $DEFINITIONS_BUCKET --recursive

      - name: Teardown
        run: yarn teardown -- --scope=@core/anti-virus -- -- --stage $STAGE

  # Accounts (queue)
  accounts-queue:
    name: Teardown accounts queue

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-api

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/queue -- -- --stage $STAGE

  # Accounts (storage)
  accounts-storage:
    name: Teardown accounts storage

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-api
      - accounts-data
      - accounts-reports

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: eu-west-1
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOWNLOAD_BUCKET: s3://accounts-254-downloads
      STAGE: 254
      UPLOAD_BUCKET: s3://accounts-254-uploads

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Clear bucket
        run: |
          aws s3 rm $DOWNLOAD_BUCKET --recursive
          aws s3 rm $UPLOAD_BUCKET --recursive

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/storage -- -- --stage $STAGE

  # Accounts (data)
  accounts-data:
    name: Teardown accounts data

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-api
      - accounts-notifications
      - accounts-reports
      - accounts-warm-up

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/data -- -- --stage $STAGE

  # Accounts (warm up)
  accounts-warm-up:
    name: Teardown accounts warm up

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/warm-up -- -- --stage $STAGE

  # Accounts (notifications)
  accounts-notifications:
    name: Teardown accounts notifications

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-reports

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/notifications -- -- --stage $STAGE

  # Accounts (reports)
  accounts-reports:
    name: Teardown accounts reports

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs:
      - setup
      - accounts-api

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: eu-west-1
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REPORTS_BUCKET: s3://accounts-254-reports
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Clear bucket
        run: aws s3 rm $REPORTS_BUCKET --recursive

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/reports -- -- --stage $STAGE

  # Accounts (API)
  accounts-api:
    name: Teardown accounts API

    if: github.actor != 'dependabot[bot]' && always()

    runs-on: ubuntu-latest

    needs: setup

    env:
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_DEV }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: 254

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Set Node version
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
          cache: yarn

      - name: Generate packages cache key
        run: ./scripts/checksum.sh ./packages.txt packages

      - name: Restore Node modules
        uses: actions/cache@v2.1.6
        with:
          path: |
            ./node_modules
            ./applications/*/*/node_modules
            ./packages/*/node_modules
          key: ${{ runner.os }}-modules-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Restore packages
        uses: actions/cache@v2.1.6
        with:
          path: ./packages/*/lib
          key: ${{ runner.os }}-packages-v2-${{ hashFiles('**/packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Teardown
        run: yarn teardown -- --scope=@accounts/api -- -- --stage $STAGE
