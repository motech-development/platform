---
alwaysApply: true
---

# Code Style Ruleset

## Description
Mandatory code style and testing standards for this project.

### ðŸ§© Non-Negotiable Coding Styles

- Ensure all code **passes linting** and contains **no TypeScript errors**.
- **Never disable lint rules** to bypass issues â€” fix the underlying problem instead.
- Prefer **functional array methods** (`map`, `filter`, `reduce`) instead of using loops or `Array.push()`.
- **Infer types automatically** where possible rather than explicitly annotating simple cases.
- Use **type declarations** (`type` or `interface`) instead of inline object types.
- Always insert a **newline before `return` statements**.
- Format **object literals across multiple lines** for readability.
- Choose **descriptive and meaningful variable names**.
- **Do not import `React`** from `'react'` in component files.
- Avoid bare `return;` â€” use **explicit control flow**.
- Separate **variable declarations with blank lines**.
- Keep changes **surgical** â€” avoid modifying unrelated code.
- When editing existing files, **match the existing code style and conventions**.
- **Respect `.editorconfig` settings** at all times â€” indentation, line endings, and whitespace must match project configuration.

---

### ðŸ§ª Testing

- Write tests that **validate functionality and behavior**, not implementation details or code structure.

---

### ðŸ§° Other Rules

- Use **`yarn`** for dependency management; **do not use `npm`**.
